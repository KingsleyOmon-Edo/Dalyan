//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Dalyan.WebApi.Controllers
{
    using System;
    using SimpleInjector;
    using Dalyan.Entities;
    using System.Linq;
    using System.Net;
    using System.Web.Http;
    using System.Net.Http;
    using Dalyan.Entities.Models;
    using Dalyan.Service;
    using Dalyan.WebApi.Attributes;
    using Dalyan.Service.Services;
    using System.Collections.Generic;
    using Entities.Contracts;

    public class CompanyController : ApiController
    {
        private readonly Container _container;
        public CompanyController(Container container)
             : base()
        {
            _container = container;
        }


        [UserAuthorize]
        [HttpPost]
        public ServiceResult<Company> Add(Company obj)
        {
            CompanyService service = new CompanyService(_container);
            return service.Add(obj);
        }
        [UserAuthorize]
        [HttpPost]
        public ServiceResult<Company> Edit(Company obj)
        {
            CompanyService service = new CompanyService(_container);
            return service.Edit(obj);
        }
        [UserAuthorize]
        [HttpPost]
        public ServiceResult<Company> Retrieve(int Id)
        {
            CompanyService service = new CompanyService(_container);
            return service.Retrieve(Id);
        }
        [UserAuthorize]
        [HttpPost]
        public ServiceResult<IList<Company>> GetAll()
        {
            CompanyService service = new CompanyService(_container);
            return service.GetAll();
        }
        [UserAuthorize]
        [HttpPost]
        public ServiceResult<string> Delete(int Id)
        {
            CompanyService service = new CompanyService(_container);
            return service.Delete(Id);
        }
    }
}
