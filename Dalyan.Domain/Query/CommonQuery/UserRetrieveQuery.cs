//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Dalyan.Domain.Query
{
    using System;
    using Dalyan.Domain;
    using System.Linq;
    using System.Text;
    using Dalyan.Domain.Query;
    using System.Data;
    using System.Xml;
    using Dalyan.Db;
    using Entities.Models;
    using Dalyan.Entities.Enumerations;
    using AutoMapper;
    using System.Threading.Tasks;
    using System.Collections.Generic;

    public class UserRetrieveQuery : IQuery<Dalyan.Entities.Models.User>
    {
        public int Id { get; set; }
    }

    public class UserRetrieveQueryHandler : IQueryHandler<UserRetrieveQuery, Dalyan.Entities.Models.User>
    {
        private readonly DbEntities _db;
        public UserRetrieveQueryHandler()
        {
            _db = new DbEntities();
        }


        public Dalyan.Entities.Models.User Handler(UserRetrieveQuery query)
        {
            try
            {
                var result = _db.User.Include("CommonUserType").Include("User2").Include("User3").Where(x => x.IsDeleted == false && x.Id == query.Id).FirstOrDefault();
                Mapper.CreateMap<Dalyan.Db.CommonUserType, Dalyan.Entities.Models.CommonUserType>();
                Mapper.CreateMap<Dalyan.Db.User, Dalyan.Entities.Models.User>();
                Mapper.CreateMap<Dalyan.Db.User, Dalyan.Entities.Models.User>();
                Mapper.CreateMap<Dalyan.Db.User, Dalyan.Entities.Models.User>().ForMember(c => c.CommonUserType, d => d.MapFrom(s => s.CommonUserType)).ForMember(c => c.User2, d => d.MapFrom(s => s.User2)).ForMember(c => c.User3, d => d.MapFrom(s => s.User3));
                return Mapper.Map<Dalyan.Db.User, Dalyan.Entities.Models.User>(result);

            }
            catch (Exception ex)
            {
                throw new ExceptionLog(LogType.DATABASE_SELECT, LogLevel.ERROR, ex, "RetrieveQueryHandler");
            }
        }
    }
}
